/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-10-23 04:07:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class clientlogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\"\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("<title>Client Login</title>\n");
      out.write("\n");
      out.write("<link\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\"\n");
      out.write("	rel=\"stylesheet\"\n");
      out.write("	integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\"\n");
      out.write("	crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("<!-- JavaScript Bundle with Popper -->\n");
      out.write("<script\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("	integrity=\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\"\n");
      out.write("	crossorigin=\"anonymous\">\n");
      out.write("	\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body class=\"bg-light\">\n");
      out.write("\n");
      out.write("	");

	String successMessage = (String) request.getAttribute("successMessage");
	
      out.write('\n');
      out.write('	');

	String unsuccessMessage = (String) request.getAttribute("unsuccessMessage");
	
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	");

	if (successMessage != null) {
	
      out.write("\n");
      out.write("	<script>\n");
      out.write("        alert(\"");
      out.print(successMessage);
      out.write("\");\n");
      out.write("    </script>\n");
      out.write("	");

	}
	
      out.write('\n');
      out.write('\n');
      out.write('	');

	if (unsuccessMessage != null) {
	
      out.write("\n");
      out.write("	<script>\n");
      out.write("        alert(\"Error: ");
      out.print(unsuccessMessage);
      out.write("\n");
      out.write("		\");\n");
      out.write("	</script>\n");
      out.write("	");

	}
	
      out.write("\n");
      out.write("\n");
      out.write("	<section class=\"text-center text-lg-start\">\n");
      out.write("\n");
      out.write("		<style>\n");
      out.write(".cascading-right {\n");
      out.write("	margin-right: -50px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("@media ( max-width : 991.98px) {\n");
      out.write("	.cascading-right {\n");
      out.write("		margin-right: 0;\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("		<div class=\"container py-4\">\n");
      out.write("			<div class=\"row g-0 align-items-center\">\n");
      out.write("\n");
      out.write("				<div class=\"col-lg-4 m-4 mb-lg-2\">\n");
      out.write("					<img src=\"mainLogo.png\" class=\"w-100 rounded-4 shadow-4\" alt=\"***\" />\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<div class=\"col-lg-6 mb-5 mb-lg-0\">\n");
      out.write("					<div class=\"card cascading-right\"\n");
      out.write("						style=\"background: hsla(0, 0%, 100%, 0.55); backdrop-filter: blur(30px);\">\n");
      out.write("						<div class=\"card-body p-5 shadow-5 text-center\">\n");
      out.write("							<h2 class=\"fw-bold mb-5\">Client SignIn</h2>\n");
      out.write("							<form action=\"loginclient\" method=\"post\">\n");
      out.write("								<!-- 2 column grid layout with text inputs for the first and last names -->\n");
      out.write("\n");
      out.write("								<!-- Email input -->\n");
      out.write("								<div class=\"form-outline mb-4\">\n");
      out.write("									<label class=\"form-label\" for=\"form3Example3\">UserName</label>\n");
      out.write("									<input type=\"text\" id=\"form3Example3\" class=\"form-control\"\n");
      out.write("										placeholder=\"Enter valid User Name\" name=\"uid\" required />\n");
      out.write("								</div>\n");
      out.write("\n");
      out.write("								<!-- Password input -->\n");
      out.write("								<div class=\"form-outline mb-4\">\n");
      out.write("									<label class=\"form-label\" for=\"form3Example4\">Password</label>\n");
      out.write("									<input type=\"password\" id=\"form3Example4\" class=\"form-control\"\n");
      out.write("										placeholder=\"Enter a valid Password\" name=\"pass\" required />\n");
      out.write("								</div>\n");
      out.write("\n");
      out.write("								<!-- Submit button -->\n");
      out.write("								<button type=\"submit\" class=\"btn btn-primary btn-block mb-4\">\n");
      out.write("									SignIn</button>\n");
      out.write("							</form>\n");
      out.write("\n");
      out.write("							<!-- Register buttons -->\n");
      out.write("							<div class=\"text-center\">\n");
      out.write("								<p>or sign up with:</p>\n");
      out.write("\n");
      out.write("								<a href=\"vendorlogin.jsp\" style=\"text-decoration: none;\">\n");
      out.write("									<button type=\"button\" class=\"btn btn-secondary btn-block mr-4\">SignIn\n");
      out.write("										as Vendor</button>\n");
      out.write("								</a> <a href=\"addnewclient.jsp\" style=\"text-decoration: none;\">\n");
      out.write("									<button type=\"button\" class=\"btn btn-success btn-block m-2\">Create\n");
      out.write("										Account</button>\n");
      out.write("								</a>\n");
      out.write("							</div>\n");
      out.write("\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</section>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
